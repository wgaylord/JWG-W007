 outp | addr | data (base 16)

  0:0 |    0 | 00 00 00 b0 b0 00 00 00 ; jmp main
  8:0 |    8 |             ; InitInputData:
  8:0 |    8 | 00 00 00 4f 00 00 00 00 ; limd SCRATCH1, 0
 10:0 |   10 | 00 c0 01 30 00 10 00 00 ; sb SCRATCH1, ZERO, STRING_BUFFER_POINTER
 18:0 |   18 | 00 00 00 d0 ; rtn
 1c:0 |   1c |             ; InputRoutine:
 1c:0 |   1c | 00 20 36 20 90 10 00 00 ; sw A, Z, CPU_STACK
 24:0 |   24 | 00 00 00 4f 04 00 00 00 ; limd SCRATCH1, 4
 2c:0 |   2c | 00 b0 f9 56 ; add Z, SCRATCH1, Z
 30:0 |   30 | 00 30 36 20 90 10 00 00 ; sw B, Z, CPU_STACK
 38:0 |   38 | 00 b0 f9 56 ; add Z, SCRATCH1, Z
 3c:0 |   3c | 00 e0 37 20 90 10 00 00 ; sw STATUS, Z, CPU_STACK
 44:0 |   44 | 00 b0 f9 56 ; add Z, SCRATCH1, Z
 48:0 |   48 | 00 00 c0 18 00 10 00 00 ; lb B, ZERO, STRING_BUFFER_POINTER
 50:0 |   50 | 00 00 80 18 00 00 00 80 ; lb A, ZERO, SERIAL_DATA
 58:0 |   58 | 00 00 04 a8 ; cmpu A, ZERO
 5c:0 |   5c | 00 02 00 b0 80 00 00 00 ; bchi EQUAL, InputRoutineExit
 64:0 |   64 | 00 20 06 30 01 10 00 00 ; sb A, B, STRING_BUFFER
 6c:0 |   6c | 00 20 00 30 00 00 00 80 ; sb A, ZERO, SERIAL_DATA
 74:0 |   74 | 00 30 c2 50 ; add B, ONE, B
 78:0 |   78 | 00 30 00 30 00 10 00 00 ; sb B, ZERO, STRING_BUFFER_POINTER
 80:0 |   80 |             ; InputRoutineExit:
 80:0 |   80 | 00 00 00 4f 04 00 00 00 ; limd SCRATCH1, 4
 88:0 |   88 | 00 b0 f9 5e ; sub Z, SCRATCH1, Z
 8c:0 |   8c | 00 00 b6 0f 90 10 00 00 ; lw STATUS, Z, CPU_STACK
 94:0 |   94 | 00 b0 f9 5e ; sub Z, SCRATCH1, Z
 98:0 |   98 | 00 00 f6 08 90 10 00 00 ; lw B, Z, CPU_STACK
 a0:0 |   a0 | 00 b0 f9 5e ; sub Z, SCRATCH1, Z
 a4:0 |   a4 | 00 00 b6 08 90 10 00 00 ; lw A, Z, CPU_STACK
 ac:0 |   ac | 00 00 00 d0 ; rtn
 b0:0 |   b0 |             ; main:
 b0:0 |   b0 | 00 00 00 c0 08 00 00 00 ; call InitInputData
 b8:0 |   b8 |             ; MainLoop:
 b8:0 |   b8 | 00 00 00 c0 1c 00 00 00 ; call InputRoutine
 c0:0 |   c0 | 00 00 00 b0 b8 00 00 00 ; jmp MainLoop
